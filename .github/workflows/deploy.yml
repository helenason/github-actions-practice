# workflow 이름
name: Github Actions 실행시키기

# event: 실행 시점
on:
  push:
    branches:
      - main

# 하나의 workflow 1개 이상의 job 구성
# 여러 job 기본적으로 병렬로 수행
jobs:
  Deploy: # job 식별 위한 id
    runs-on: ubuntu-latest # ubuntu 환경 + 가장 최신 버전
    # step: 특정 작업을 수행하는 가장 작은 단위
    # job 여러 step 으로 구성
    steps:
      - name: SSH로 EC2에 원격 접속
        uses: appleboy/ssh-action@v1.0.3 # 라이브러리 사용, 아래는 해당 라이브러리의 문법 (공식 문서 참조)
        env: # 환경 변수 설정
          APPLICATION_PROPERTIES: ${{ secrets.APPLICATION_PROPERTIES }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          envs: APPLICATION_PROPERTIES # 변수 선언 (라이브러리 문법)
          script_stop: true
          script: |
            cd /home/ubuntu/github-actions-practice
            rm -rf src/main/resources/application.yml
            git pull origin main
            echo "$APPLICATION_PROPERTIES" > src/main/resources/application.yml # 해당 변수가 파일로 출력 -> 깃허브엔 없지만 EC2엔 생성
            ./gradlew clean build
            sudo fuser -k -n tcp 8080 || true # 서버 없어서 에러 뜨면 true 
            nohup java -jar build/libs/*SNAPSHOT.jar > ./output.log 2>&1 &
